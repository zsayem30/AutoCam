<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Strict//EN">
<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<title>Simulation</title>
<link rel="stylesheet" type="text/css" href="../style.css">
</head>

<body>

<div align="center">
<table class=allEncompassingTable >
 <tr>
  <td >
<p><a href="../index.html" TARGET="_top"><img src="images/homeImg.png"></a></p>



<h1>Simulation</h1>


<p>A simulation in CoppeliaSim can be started, paused and stopped with [Menu bar --&gt; Simulation --&gt; Start/Pause/Stop simulation] or through the related toolbar buttons:<br>
</p>

<p align=center><img src="images/simulation1.jpg"></p>
<p class=imageLabel>[Simulation start/pause/stop toolbar buttons]</p>

<p>Internally, the simulator will use additional intermediate states in order to correctly inform <a href="scripts.htm">scripts</a> or programs about what will happen next. Following state diagram illustrates the simulator's internal states:<br>
</p>

<p align=center><img src="images/simulation2.jpg"></p>
<p class=imageLabel>[Simulation state diagram]</p>

<br>
<br>
<h2>
<a name="simulationLoop"></a>Simulation loop
</h2>


<p>The simulator operates by advancing the simulation time at constant time steps. Following figure illustrates the main simulation loop:<br>
</p>

<p align=center><img src="images/simulation3.jpg"></p>
<p class=imageLabel>[Main simulation loop]</p>
<br>

<p>
Real-time simulation is supported by trying to keep the simulation time synchronized with the real time:
</p>

<p align=center><img src="images/simulation4.jpg"></p>
<p class=imageLabel>[Real-time simulation loop]</p>
<br>

<p>Following represents a very simplified <a href="mainClientApplication.htm">main client application</a> (messaging, <a href="plugins.htm">plugin</a> handling and other details have been omitted for clarity purpose):<br>
</p>

<code class="hljs language-c++ coppelia-external-code">
void initializationCallback<br>{<br>    // do some initialization here
}

void loopCallback<br>{<br>    if ( (simGetSimulationState()&amp;sim_simulation_advancing)!=0 )<br>    {<br>        if ( (simGetRealTimeSimulation()!=1)||(simIsRealTimeSimulationStepNeeded()==1) )<br>        {<br>            if ((simHandleMainScript()&amp;sim_script_main_script_not_called)==0)<br>                simAdvanceSimulationByOneStep();<br>        }<br>    }<br>}

void deinitializationCallback<br>{<br>    // do some clean-up here
}
</code>

<p>Depending on the simulation complexity, performance of the computer and <a href="simulationPropertiesDialog.htm">simulation settings</a>, real-time simulation might not always be possible.<br>
</p>

<br>
<h2>
<a name="simulationSpeed"></a>Simulation speed
</h2>


<p>In non real-time simulations, the simulation speed (i.e. the perceived speed) is mainly dependent on two factors: the simulation time step and the number of simulation passes for one rendering pass (see the <a href="simulationPropertiesDialog.htm">simulation dialog</a> for more details). In the case of a real-time simulation, the simulation speed mainly depends on the real-time multiplication coefficient, but also to a certain degree of the simulation time step (a too small simulation time step might not be compatible with the real-time character of a simulation because of the limited calculation power of the computer). During simulation, the simulation speed can be adjusted with following toolbar buttons:<br>
</p>

<p align=center><img src="images/simulation5.jpg"></p>
<p class=imageLabel>[Simulation speed adjustment toolbar buttons]</p>

<p>The simulation speed is adjusted in a way so that the initial simulation time step is never increased (because this might have as consequence the breaking of a mechanism for example). Following two figures illustrate the simulation speed adjustment mechanisms:<br>
</p>

<p align=center><img src="images/simulation6.jpg"></p>
<p class=imageLabel>[Simulation speed adjustment mechanism for <strong>non real-time simulations</strong>]</p>
<br>

<p align=center><img src="images/simulation7.jpg"></p>
<p class=imageLabel>[Simulation speed adjustment mechanism for <strong>real-time simulations</strong>]</p>

<p>By default, each simulation cycle is composed by following <strong>sequential</strong> operations:</p>
<li>Executing the <a href="mainScript.htm">main script</a></li>
<li>Rendering the scene</li>
<br>
<br>

 </tr>
</table> 
</div>  
  
  
</body>

</html>
